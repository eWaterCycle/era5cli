[build-system]
requires = ["hatchling>=1.8.0", "hatch-vcs", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["era5cli"]

[tool.hatch.version]
path = "era5cli/__version__.py"

[project]
name = "era5cli"
description = "A command line interface to download ERA5 data from the Copernicus Climate Data Store. https://climate.copernicus.eu/.."
readme = "README.md"
license = { text = "Apache Software License" }
requires-python = ">=3.8, <3.12"
authors = [
    {name = "Ronald van Haren"},
    {name = "Jaro Camphuijsen"},
    {name = "Yifat Dzigan"},
    {name = "Niels Drost"},
    {name = "Fakhereh Alidoost"},
    {name = "Bouwe Andela"},
    {name = "Jerom Aerts"},
    {name = "Berend Weel"},
    {name = "Rolf Hut"},
    {name = "Klaus Zimmermann"},
    {name = "Peter Kalverla"},
    {name = "Barbara Vreede", email="b.vreede@esciencecenter.nl"},
    {name = "Aytaç Paçal"},
    {name = "Stef Smeets"},
    {name = "Stefan Verhoeven"},
    {name = "Elizaveta Malinina"},
    {name = "Bart Schilperoort", email = "b.schilperoort@esciencecenter.nl" }
]
keywords = [
  "ERA-5",
  "climate data",
  "cds api",
  "cds download",
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Atmospheric Science",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
dependencies = [
  "cdsapi == 0.5.1",
  "pathos",
  "PTable",
  "netCDF4"
]
dynamic = ["version"]

[project.scripts]
era5cli="era5cli.cli:main"

[project.optional-dependencies]
dev = [
  "hatch",
  "bump-my-version",
  "flake8",
  "flake8-pyproject",
  "black",
  "isort",
  "pytest",
  "pytest-flake8",
  "pytest-cov",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-gen-files",
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.hatch.envs.default]
features = ["dev",]

[tool.hatch.envs.default.scripts]
lint = [
  "flake8p .",  # flake8p ensures pyproject.toml is used for configuration
  "black --check --diff .",
  "isort --check-only --diff .",
]
format = ["isort .", "black .", "lint",]
test = ["pytest",]
coverage = ["pytest --cov=era5cli --cov-report term --cov-report xml:cov.xml tests/"]

[tool.hatch.envs.docs]
features = ["docs",]

[tool.hatch.envs.docs.scripts]
build = ["mkdocs build",]
serve = ["mkdocs serve",]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.isort]
py_version=39
skip = [".gitignore"]
skip_glob = ["docs/*"]
force_single_line = true
lines_after_imports = 2
no_lines_before = ["FUTURE","STDLIB","THIRDPARTY","FIRSTPARTY","LOCALFOLDER"]
known_first_party = ["era5cli"]
src_paths = ["era5cli", "tests"]
line_length = 120

[tool.flake8]
max-line-length = 88
ignore = [
  "E203",  # Whitespace before ":". Not PEP8 compliant (https://github.com/psf/black/issues/315)
  "W503",  # https://peps.python.org/pep-0008/#should-a-line-break-before-or-after-a-binary-operator
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "@overload",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:"
]
